syntax = "proto3";
import "registry/did.proto";
package sonrio.sonr.registry;

import "registry/whois.proto";
import "registry/whatis.proto";
import "registry/thereis.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/sonr-io/sonr/x/registry/types";

// Msg defines the Msg service.
service Msg {
  rpc RegisterService(MsgRegisterService) returns (MsgRegisterServiceResponse);
  rpc RegisterName(MsgRegisterName) returns (MsgRegisterNameResponse);
  rpc AccessName(MsgAccessName) returns (MsgAccessNameResponse);
  rpc UpdateName(MsgUpdateName) returns (MsgUpdateNameResponse);
  rpc AccessService(MsgAccessService) returns (MsgAccessServiceResponse);
  rpc UpdateService(MsgUpdateService) returns (MsgUpdateServiceResponse);
  rpc CreateWhois(MsgCreateWhois) returns (MsgCreateWhoisResponse);
  rpc UpdateWhois(MsgUpdateWhois) returns (MsgUpdateWhoisResponse);
  rpc DeleteWhois(MsgDeleteWhois) returns (MsgDeleteWhoisResponse);
  rpc CreateWhatis(MsgCreateWhatis) returns (MsgCreateWhatisResponse);
  rpc UpdateWhatis(MsgUpdateWhatis) returns (MsgUpdateWhatisResponse);
  rpc DeleteWhatis(MsgDeleteWhatis) returns (MsgDeleteWhatisResponse);
  rpc CreateThereis(MsgCreateThereis) returns (MsgCreateThereisResponse);
  rpc UpdateThereis(MsgUpdateThereis) returns (MsgUpdateThereisResponse);
  rpc DeleteThereis(MsgDeleteThereis) returns (MsgDeleteThereisResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgRegisterService {
  string creator = 1;
  string serviceName = 2;
  string publicKey = 3;
}

message MsgRegisterServiceResponse {
}

// MsgRegisterName is a request to register a name with the ".snr" name of a peer
message MsgRegisterName {
  string creator = 1;
  string deviceId = 2;
  string os = 3;
  string model = 4;
  string arch = 5;
  string publicKey = 6;
  string nameToRegister = 7;
}

message MsgRegisterNameResponse {
  bool isSuccess = 1;
  Did did = 2;
  DidDocument didDocument = 3;
}

// MsgAccessName defines the MsgAccessName transaction.
message MsgAccessName {
// The account that is accessing the name
  string creator = 1;

  // The name to access
  string name = 2;

  // The Public Key of the peer to access
  string publicKey = 3;

  // The Libp2p peer ID of the peer to access
  string peerId = 4;
}

message MsgAccessNameResponse {
  string name = 1;
  string publicKey = 2;
  string peerId = 3;
}

message MsgUpdateName {
  // The account that owns the name.
  string creator = 1;

  // The name of the peer to update the name of
  string name = 2;

  // The Updated Metadata
  map<string, string> metadata = 3; // optional
}


message MsgUpdateNameResponse {
  DidDocument didDocument = 1;
  map<string, string> metadata = 2; // optional
}

message MsgAccessService {
  // The account that is accessing the service
  string creator = 1;

  // The name of the service to access
  string did = 2;
}

message MsgAccessServiceResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // Data of the response
    map<string, string> metadata = 3;
}

message MsgUpdateService {
  // The account that owns the name.
  string creator = 1;

  // The name of the peer to update the service details of
  string did = 2;

  // The updated configuration for the service
  map<string, string> configuration = 3;

  // The metadata for any service information required
  map<string, string> metadata = 4; // optional
}

message MsgUpdateServiceResponse {
  DidDocument didDocument = 1;
    // The updated configuration for the service
  map<string, string> configuration = 2;

  // The metadata for any service information required
  map<string, string> metadata = 3; // optional
}

message MsgCreateWhois {
  string creator = 1;
  string index = 2;

  string did = 3;
  string value = 4;
}
message MsgCreateWhoisResponse {}

message MsgUpdateWhois {
  string creator = 1;
  string index = 2;

  string did = 3;
  string value = 4;
}
message MsgUpdateWhoisResponse {}

message MsgDeleteWhois {
  string creator = 1;
  string index = 2;
}
message MsgDeleteWhoisResponse {}

message MsgCreateWhatis {
  string creator = 1;
  string index = 2;

  string did = 3;
  string value = 4;
}
message MsgCreateWhatisResponse {}

message MsgUpdateWhatis {
  string creator = 1;
  string index = 2;

  string did = 3;
  string value = 4;
}
message MsgUpdateWhatisResponse {}

message MsgDeleteWhatis {
  string creator = 1;
  string index = 2;
}
message MsgDeleteWhatisResponse {}

message MsgCreateThereis {
  string creator = 1;
  string index = 2;

  string did = 3;
  string value = 4;
}
message MsgCreateThereisResponse {}

message MsgUpdateThereis {
  string creator = 1;
  string index = 2;

  string did = 3;
  string value = 4;
}
message MsgUpdateThereisResponse {}

message MsgDeleteThereis {
  string creator = 1;
  string index = 2;
}
message MsgDeleteThereisResponse {}

// this line is used by starport scaffolding # proto/tx/message
