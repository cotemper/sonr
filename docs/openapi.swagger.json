{
  "swagger": "2.0",
  "info": {
    "title": "common/v1/info.proto",
    "description": "Package common defines commonly used types agnostic to the node role on the Sonr network.",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "HighwayService"
    },
    {
      "name": "MotorService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "PayloadItem": {
      "type": "object",
      "properties": {
        "mime": {
          "$ref": "#/definitions/v1MIME"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "file": {
          "$ref": "#/definitions/v1FileItem"
        },
        "url": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "thumbnail": {
          "$ref": "#/definitions/v1Thumbnail",
          "title": "Thumbnail of the Item"
        }
      },
      "title": "Item in Payload"
    },
    "PeerDevice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "os": {
          "type": "string"
        },
        "arch": {
          "type": "string"
        },
        "model": {
          "type": "string"
        }
      },
      "title": "Peer Info for Device"
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "v1AccessNameResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "peer": {
          "$ref": "#/definitions/v1Peer",
          "title": "Data of the response"
        }
      },
      "title": "AccessNameResponse is a response to a request for a name"
    },
    "v1AccessServiceResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Data of the response"
        }
      },
      "title": "AccessServiceResponse is a response to a request for a service"
    },
    "v1BucketType": {
      "type": "string",
      "enum": [
        "BUCKET_TYPE_UNSPECIFIED",
        "BUCKET_TYPE_APP",
        "BUCKET_TYPE_USER"
      ],
      "default": "BUCKET_TYPE_UNSPECIFIED",
      "description": "BucketType is the type of a bucket.\n\n - BUCKET_TYPE_UNSPECIFIED: BucketTypeUnspecified is the default value.\n - BUCKET_TYPE_APP: BucketTypeApp is an App specific bucket. For Assets regarding the service.\n - BUCKET_TYPE_USER: BucketTypeUser is a User specific bucket. For any remote user data that is required\nto be stored in the Network."
    },
    "v1CreateBucketResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        }
      },
      "title": "CreateBucketResponse is a response to a request to create a bucket"
    },
    "v1CreateChannelResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        }
      },
      "title": "CreateChannelResponse is a response to a request to create a channel"
    },
    "v1CreateObjectResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        }
      },
      "title": "CreateObjectResponse is a response to a request to create an object"
    },
    "v1DecideResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        }
      },
      "title": "(Client) RespondResponse is response to RespondRequest"
    },
    "v1DeleteBlobResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        }
      },
      "title": "DeleteBlobResponse is a response to a request to delete a blob"
    },
    "v1DeleteBucketResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        }
      },
      "title": "DeleteBucketResponse is a response to a request to delete a bucket"
    },
    "v1DeleteChannelResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        }
      },
      "title": "DeleteChannelResponse is a response to a request to delete a channel"
    },
    "v1DeleteObjectResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        }
      },
      "title": "DeleteObjectResponse is a response to a request to delete an object"
    },
    "v1Did": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "description": "Method is the method used to create the DID. For the Sonr network it is \"sonr\"."
        },
        "network": {
          "type": "string",
          "description": "Network is the network the DID is on. For testnet it is \"testnet\". i.e \"did:sonr:testnet:\"."
        },
        "id": {
          "type": "string",
          "title": "id is the trailing identifier after the network. i.e. \"did:sonr:testnet:abc123\""
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Paths is a list of paths that the DID is valid for. This is used to identify the Service."
        },
        "query": {
          "type": "string",
          "description": "Query is the query string that was used to create the DID. This is followed by a '?'."
        },
        "fragment": {
          "type": "string",
          "description": "Fragment is the fragment string that was used to create the DID. This is followed by a '#'."
        }
      },
      "description": "Did represents a string that has been parsed and validated as a DID. The parts are stored\nin the individual fields."
    },
    "v1DidDocument": {
      "type": "object",
      "properties": {
        "context": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Context is the context of the DID document. This is used to identify the Service."
        },
        "id": {
          "type": "string",
          "description": "Id is the DID of the document."
        },
        "controller": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Controller is the DID of the controller of the document. This will be the individual user devices and mailboxes."
        },
        "verificationMethod": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1VerificationMethod"
          },
          "description": "VerificationMethod is the list of verification methods for the user."
        },
        "authentication": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Authentication is the list of authentication methods for the user."
        },
        "assertionMethod": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "AssertionMethod is the list of assertion methods for the user."
        },
        "capabilityInvocation": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "CapabilityInvocation is the list of capability invocation methods for the user."
        },
        "capabilityDelegation": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "CapabilityDelegation is the list of capability delegation methods for the user."
        },
        "keyAgreement": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "KeyAgreement is the list of key agreement methods for the user."
        },
        "service": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Service"
          },
          "description": "Service is the list of services or DApps that the user has access to."
        },
        "alsoKnownAs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "AlsoKnownAs is the list of \".snr\" aliases for the user."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata is the metadata of the service."
        }
      },
      "description": "DidDocument is the document that describes a DID. This document is stored on the blockchain."
    },
    "v1Direction": {
      "type": "string",
      "enum": [
        "DIRECTION_UNSPECIFIED",
        "DIRECTION_INCOMING",
        "DIRECTION_OUTGOING"
      ],
      "default": "DIRECTION_UNSPECIFIED",
      "description": "Direction is the direction of a stream.\n\n - DIRECTION_UNSPECIFIED: Unspecified is the default value.\n - DIRECTION_INCOMING: Incoming is the direction of an incoming stream.\n - DIRECTION_OUTGOING: Outgoing is the direction of an outgoing stream."
    },
    "v1DownloadBlobResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        },
        "path": {
          "type": "string",
          "title": "Path of downloaded blob"
        }
      },
      "title": "DownloadBlobResponse is a response to a request to download a blob"
    },
    "v1FileItem": {
      "type": "object",
      "properties": {
        "mime": {
          "$ref": "#/definitions/v1MIME"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "thumbnail": {
          "$ref": "#/definitions/v1Thumbnail"
        },
        "lastModified": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "For Transfer File Payload"
    },
    "v1ListenBucketResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Additional information about the response"
        },
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ObjectDoc"
          },
          "title": "Stream of objects in the bucket"
        }
      },
      "title": "ListenBucketResponse is a response of the published data to the bucket"
    },
    "v1ListenChannelResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Additional information about the response"
        },
        "message": {
          "type": "string",
          "format": "byte",
          "title": "Data of the response"
        }
      },
      "title": "ListenChannelResponse is a response of the published data to the channel"
    },
    "v1MIME": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1MIMEType",
          "title": "Type of File"
        },
        "subtype": {
          "type": "string",
          "title": "Extension of File"
        },
        "value": {
          "type": "string",
          "title": "Type/Subtype i.e. (image/jpeg)"
        }
      },
      "title": "Standard MIME with Additional Extensions"
    },
    "v1MIMEType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "TYPE_AUDIO",
        "TYPE_DOCUMENT",
        "TYPE_IMAGE",
        "TYPE_TEXT",
        "TYPE_VIDEO",
        "TYPE_URL",
        "TYPE_CRYPTO"
      ],
      "default": "TYPE_UNSPECIFIED",
      "description": "- TYPE_UNSPECIFIED: Other File Type - If cannot derive from Subtype\n - TYPE_AUDIO: Sound, Audio Files\n - TYPE_DOCUMENT: Document Files - PDF, Word, Excel, etc.\n - TYPE_IMAGE: Image Files\n - TYPE_TEXT: Text Based Files\n - TYPE_VIDEO: Video Files\n - TYPE_URL: URL Links\n - TYPE_CRYPTO: Crypto Files",
      "title": "File Content Type"
    },
    "v1Metadata": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "int64",
          "title": "Unix timestamp"
        },
        "nodeId": {
          "type": "string",
          "title": "Node ID"
        },
        "signature": {
          "type": "string",
          "format": "byte",
          "title": "Signature of the message"
        },
        "publicKey": {
          "type": "string",
          "format": "byte",
          "title": "Public Key of the message sender"
        }
      },
      "title": "Shared Metadata for Messages on all Protocols"
    },
    "v1ObjectDoc": {
      "type": "object",
      "properties": {
        "did": {
          "type": "string",
          "description": "Did is the identifier of the object."
        },
        "service": {
          "type": "string",
          "description": "Service is the service that created the object."
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tags are the tags associated with the object."
        },
        "fields": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ObjectField"
          },
          "description": "Fields are the fields associated with the object."
        }
      },
      "description": "ObjectDoc is a document for an Object stored in the graph."
    },
    "v1ObjectField": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "title": "Label is the name of the field"
        },
        "type": {
          "$ref": "#/definitions/v1ObjectFieldType",
          "title": "Type is the type of the field"
        },
        "did": {
          "type": "string",
          "description": "Did is the identifier of the field."
        },
        "stringValue": {
          "type": "string",
          "title": "String is the value of the field"
        },
        "numberValue": {
          "type": "number",
          "format": "double",
          "title": "Number is the value of the field"
        },
        "boolValue": {
          "type": "boolean",
          "title": "Float is the value of the field"
        },
        "arrayValue": {
          "$ref": "#/definitions/v1ObjectFieldArray",
          "title": "Array is the value of the field"
        },
        "timeStampValue": {
          "type": "string",
          "format": "date-time",
          "description": "Time is defined by milliseconds since epoch."
        },
        "geopointValue": {
          "$ref": "#/definitions/v1ObjectFieldGeopoint",
          "title": "Geopoint is the value of the field"
        },
        "blobValue": {
          "type": "string",
          "format": "byte",
          "title": "Blob is the value of the field"
        },
        "referenceValue": {
          "type": "string",
          "title": "Reference is the value of the field"
        },
        "ethValue": {
          "type": "string",
          "format": "byte",
          "title": "Eth Address is the value of the field"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Metadata is additional info about the field"
        }
      },
      "description": "ObjectField is a field of an Object."
    },
    "v1ObjectFieldArray": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "title": "Label is the name of the field"
        },
        "type": {
          "$ref": "#/definitions/v1ObjectFieldType",
          "title": "Type is the type of the field"
        },
        "did": {
          "type": "string",
          "description": "Did is the identifier of the field."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ObjectField"
          },
          "title": "Entries are the values of the field"
        }
      },
      "description": "ObjectFieldArray is an array of ObjectFields to be stored in the graph object."
    },
    "v1ObjectFieldGeopoint": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "title": "Label is the name of the field"
        },
        "type": {
          "$ref": "#/definitions/v1ObjectFieldType",
          "title": "Type is the type of the field"
        },
        "did": {
          "type": "string",
          "description": "Did is the identifier of the field."
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude is the geo-latitude of the point."
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "title": "Longitude is the geo-longitude of the field"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Metadata is additional info about the field"
        }
      },
      "description": "ObjectFieldGeopoint is a field of an Object for geopoints."
    },
    "v1ObjectFieldType": {
      "type": "string",
      "enum": [
        "OBJECT_FIELD_TYPE_UNSPECIFIED",
        "OBJECT_FIELD_TYPE_STRING",
        "OBJECT_FIELD_TYPE_NUMBER",
        "OBJECT_FIELD_TYPE_BOOL",
        "OBJECT_FIELD_TYPE_ARRAY",
        "OBJECT_FIELD_TYPE_TIMESTAMP",
        "OBJECT_FIELD_TYPE_GEOPOINT",
        "OBJECT_FIELD_TYPE_BLOB",
        "OBJECT_FIELD_TYPE_REFERENCE",
        "OBJECT_FIELD_TYPE_ETH"
      ],
      "default": "OBJECT_FIELD_TYPE_UNSPECIFIED",
      "description": "- OBJECT_FIELD_TYPE_UNSPECIFIED: ObjectFieldTypeUnspecified is the default value\n - OBJECT_FIELD_TYPE_STRING: ObjectFieldTypeString is a string or text field\n - OBJECT_FIELD_TYPE_NUMBER: ObjectFieldTypeInt is an integer\n - OBJECT_FIELD_TYPE_BOOL: ObjectFieldTypeBool is a boolean\n - OBJECT_FIELD_TYPE_ARRAY: ObjectFieldTypeArray is a list of values\n - OBJECT_FIELD_TYPE_TIMESTAMP: ObjectFieldTypeDateTime is a datetime\n - OBJECT_FIELD_TYPE_GEOPOINT: ObjectFieldTypeGeopoint is a geopoint\n - OBJECT_FIELD_TYPE_BLOB: ObjectFieldTypeBlob is a blob of data\n - OBJECT_FIELD_TYPE_REFERENCE: ObjectFieldTypeReference is a reference to another object by DID\n - OBJECT_FIELD_TYPE_ETH: ObjectFieldTypeETU is a pointer to an Ethereum account address.",
      "title": "ObjectFieldType is the type of the field"
    },
    "v1OnLobbyRefreshResponse": {
      "type": "object",
      "properties": {
        "olc": {
          "type": "string"
        },
        "peers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Peer"
          }
        },
        "received": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Message Sent when peer messages Lobby"
    },
    "v1OnMailboxMessageResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "buffer": {
          "type": "string",
          "format": "byte"
        },
        "from": {
          "$ref": "#/definitions/v1Profile"
        },
        "to": {
          "$ref": "#/definitions/v1Profile"
        },
        "metadata": {
          "$ref": "#/definitions/v1Metadata"
        }
      },
      "title": "Received Mail Event"
    },
    "v1OnTransmitCompleteResponse": {
      "type": "object",
      "properties": {
        "direction": {
          "$ref": "#/definitions/v1Direction"
        },
        "payload": {
          "$ref": "#/definitions/v1Payload"
        },
        "from": {
          "$ref": "#/definitions/v1Peer"
        },
        "to": {
          "$ref": "#/definitions/v1Peer"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "receivedAt": {
          "type": "string",
          "format": "int64"
        },
        "results": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "title": "Message Sent after Completed Transfer"
    },
    "v1OnTransmitDecisionResponse": {
      "type": "object",
      "properties": {
        "decision": {
          "type": "boolean"
        },
        "from": {
          "$ref": "#/definitions/v1Peer"
        },
        "received": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "DecisionEvent is emitted when a decision is made by Peer."
    },
    "v1OnTransmitInviteResponse": {
      "type": "object",
      "properties": {
        "received": {
          "type": "string",
          "format": "int64"
        },
        "from": {
          "$ref": "#/definitions/v1Peer"
        },
        "payload": {
          "$ref": "#/definitions/v1Payload"
        }
      },
      "title": "InviteEvent notifies Peer that an Invite has been received"
    },
    "v1OnTransmitProgressResponse": {
      "type": "object",
      "properties": {
        "progress": {
          "type": "number",
          "format": "double"
        },
        "received": {
          "type": "string",
          "format": "int64"
        },
        "current": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "direction": {
          "$ref": "#/definitions/v1Direction"
        }
      },
      "title": "Transfer Progress Event"
    },
    "v1ParseDidResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        }
      },
      "title": "ParseDidResponse is a response to a request to parse a DID"
    },
    "v1Payload": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayloadItem"
          }
        },
        "owner": {
          "$ref": "#/definitions/v1Profile"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Payload is Data thats being Passed"
    },
    "v1Peer": {
      "type": "object",
      "properties": {
        "sName": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1PeerStatus"
        },
        "device": {
          "$ref": "#/definitions/PeerDevice"
        },
        "profile": {
          "$ref": "#/definitions/v1Profile"
        },
        "publicKey": {
          "type": "string",
          "format": "byte"
        },
        "peerId": {
          "type": "string"
        },
        "lastModified": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Basic Info Sent to Peers to Establish Connections"
    },
    "v1PeerStatus": {
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "STATUS_ONLINE",
        "STATUS_AWAY",
        "STATUS_BUSY"
      ],
      "default": "STATUS_UNSPECIFIED",
      "title": "Peers Active Status"
    },
    "v1Profile": {
      "type": "object",
      "properties": {
        "sName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "picture": {
          "type": "string",
          "format": "byte"
        },
        "bio": {
          "type": "string"
        },
        "lastModified": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "General Information about Peer passed during Authentication"
    },
    "v1ReadBucketResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        },
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ObjectDoc"
          },
          "title": "Subscribers of the bucket"
        },
        "owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Peer"
          },
          "title": "Owners of the bucket"
        }
      },
      "title": "ReadBucketResponse is a response to a request to read a bucket"
    },
    "v1ReadChannelResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        },
        "subscribers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Peer"
          },
          "title": "Subscribers of the channel"
        },
        "owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Peer"
          },
          "title": "Owners of the channel"
        }
      },
      "title": "ReadChannelResponse is a response to a request to read a channel"
    },
    "v1ReadObjectResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        },
        "object": {
          "$ref": "#/definitions/v1ObjectDoc",
          "title": "Data of the response"
        }
      },
      "title": "ReadObjectResponse is a response to a request to read an object"
    },
    "v1RegisterNameResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "didDocument": {
          "$ref": "#/definitions/v1DidDocument",
          "title": "DID of the response"
        }
      },
      "title": "RegisterNameResponse is a request to register a name"
    },
    "v1RegisterServiceResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "didDocument": {
          "$ref": "#/definitions/v1DidDocument",
          "title": "DID of the response"
        }
      },
      "title": "RegisterServiceResponse is a request to register a name"
    },
    "v1ResolveDidResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "didDocument": {
          "$ref": "#/definitions/v1DidDocument",
          "title": "DID of the response"
        }
      },
      "title": "ResolveDidResponse is a response to a request to resolve a DID"
    },
    "v1SearchResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        },
        "peer": {
          "$ref": "#/definitions/v1Peer"
        },
        "peerId": {
          "type": "string"
        },
        "sName": {
          "type": "string"
        }
      },
      "title": "(Client) SearchResponse is Message for Searching for Peer"
    },
    "v1Service": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID is the DID of the service."
        },
        "type": {
          "type": "string",
          "description": "Type is the type of the service."
        },
        "serviceEndpoint": {
          "type": "string",
          "description": "ServiceEndpoint is the endpoint of the service."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata is the metadata of the service."
        }
      },
      "description": "Service is a Application that runs on the Sonr network."
    },
    "v1ShareResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        }
      },
      "title": "(Client) ShareResponse is response to ShareRequest"
    },
    "v1SupplyItem": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string",
          "format": "byte",
          "title": "Supply Path of the Thumbnail"
        }
      },
      "title": "SupplyItem is an item supplied to be a payload"
    },
    "v1SyncBlobResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        }
      },
      "title": "SyncBlobResponse is a response to a request to sync a blob"
    },
    "v1Thumbnail": {
      "type": "object",
      "properties": {
        "buffer": {
          "type": "string",
          "format": "byte"
        },
        "mime": {
          "$ref": "#/definitions/v1MIME"
        }
      },
      "title": "Thumbnail of File"
    },
    "v1UpdateBucketResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        },
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ObjectDoc"
          },
          "title": "Subscribers of the bucket"
        },
        "owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Peer"
          },
          "title": "Owners of the bucket"
        }
      },
      "title": "UpdateBucketResponse is a response to a request to update a bucket"
    },
    "v1UpdateChannelResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        },
        "subscribers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Peer"
          },
          "title": "Subscribers of the channel"
        },
        "owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Peer"
          },
          "title": "Owners of the channel"
        }
      },
      "title": "UpdateChannelResponse is a response to a request to update a channel"
    },
    "v1UpdateNameResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Data of the updated name record"
        }
      },
      "title": "UpdateNameResponse is a response to a request to update a name"
    },
    "v1UpdateObjectResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        },
        "object": {
          "$ref": "#/definitions/v1ObjectDoc",
          "title": "Data of the response"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Metadata is additional metadata of the response"
        }
      },
      "title": "UpdateObjectResponse is a response to a request to update an object"
    },
    "v1UpdateServiceResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Data of the updated name record"
        }
      },
      "title": "UpdateServiceResponse is a response to a request to update a name"
    },
    "v1UploadBlobResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Code of the response"
        },
        "message": {
          "type": "string",
          "title": "Message of the response"
        },
        "did": {
          "$ref": "#/definitions/v1Did",
          "title": "DID of the response"
        },
        "pinned": {
          "type": "boolean",
          "title": "Pinned is true if the blob is pinned to IPFS"
        }
      },
      "title": "UploadBlobResponse is a response to a request to upload a blob"
    },
    "v1VerificationMethod": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID is the DID of the verification method."
        },
        "type": {
          "$ref": "#/definitions/v1VerificationMethodType",
          "description": "Type is the type of the verification method."
        },
        "controller": {
          "type": "string",
          "description": "Controller is the DID of the controller of the verification method."
        },
        "publicKeyHex": {
          "type": "string",
          "description": "PublicKeyHex is the public key of the verification method in hexidecimal."
        },
        "publicKeyBase58": {
          "type": "string",
          "description": "PublicKeyBase58 is the public key of the verification method in base58."
        },
        "blockchainAccountId": {
          "type": "string",
          "description": "BlockchainAccountId is the blockchain account id of the verification method."
        }
      },
      "description": "VerificationMethod is a method that can be used to verify the DID."
    },
    "v1VerificationMethodType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "TYPE_ECDSA_SECP256K1",
        "TYPE_X25519",
        "TYPE_ED25519",
        "TYPE_BLS_12381_G1",
        "TYPE_BLS_12381_G2",
        "TYPE_RSA",
        "TYPE_VERIFIABLE_CONDITION"
      ],
      "default": "TYPE_UNSPECIFIED",
      "description": " - TYPE_UNSPECIFIED: TYPE_UNSPECIFIED is the default value.\n - TYPE_ECDSA_SECP256K1: TYPE_ECDSA_SECP256K1 represents the Ed25519VerificationKey2018 key type.\n - TYPE_X25519: TYPE_X25519 represents the X25519KeyAgreementKey2019 key type.\n - TYPE_ED25519: TYPE_ED25519 represents the Ed25519VerificationKey2018 key type.\n - TYPE_BLS_12381_G1: TYPE_BLS_12381_G1 represents the Bls12381G1Key2020 key type\n - TYPE_BLS_12381_G2: TYPE_BLS_12381_G2 represents the Bls12381G2Key2020 key type\n - TYPE_RSA: TYPE_RSA represents the RsaVerificationKey2018 key type.\n - TYPE_VERIFIABLE_CONDITION: TYPE_VERIFIABLE_CONDITION represents the VerifiableCondition2021 key type."
    }
  }
}
